[{"C:\\Users\\Sai Nikhil\\Desktop\\github searching task\\src\\index.js":"1","C:\\Users\\Sai Nikhil\\Desktop\\github searching task\\src\\App.js":"2","C:\\Users\\Sai Nikhil\\Desktop\\github searching task\\src\\components\\pages\\Home\\Home.js":"3","C:\\Users\\Sai Nikhil\\Desktop\\github searching task\\src\\components\\pages\\User\\User.js":"4","C:\\Users\\Sai Nikhil\\Desktop\\github searching task\\src\\axios.js":"5","C:\\Users\\Sai Nikhil\\Desktop\\github searching task\\src\\components\\ui\\User.js":"6","C:\\Users\\Sai Nikhil\\Desktop\\github searching task\\src\\components\\ui\\Repo.js":"7"},{"size":169,"mtime":1664303444269,"results":"8","hashOfConfig":"9"},{"size":432,"mtime":1664303444240,"results":"10","hashOfConfig":"9"},{"size":3823,"mtime":1664456730305,"results":"11","hashOfConfig":"9"},{"size":3519,"mtime":1664456794827,"results":"12","hashOfConfig":"9"},{"size":110,"mtime":1664303444251,"results":"13","hashOfConfig":"9"},{"size":481,"mtime":1664303444268,"results":"14","hashOfConfig":"9"},{"size":339,"mtime":1664456413601,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lvjdq3",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sai Nikhil\\Desktop\\github searching task\\src\\index.js",[],[],"C:\\Users\\Sai Nikhil\\Desktop\\github searching task\\src\\App.js",[],[],"C:\\Users\\Sai Nikhil\\Desktop\\github searching task\\src\\components\\pages\\Home\\Home.js",["40","41","42","43","44","45","46","47"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\nimport axios from \"../../../axios\";\r\nimport User from \"../../ui/User\";\r\nimport Repo from \"../../ui/Repo\"\r\nconst Home = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  //Users fetched from the API\r\n  const [users, setUsers] = useState([]);\r\n  //Page\r\n  const [page, setPage] = useState(1);\r\n  //Per page\r\n  const [limit, setLimit] = useState(100);\r\n\r\n  const [currentpage, setCurrentPage] = useState(0)\r\n  const [activepage, setActivetPage] = useState(0)\r\n  const [perPage] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const pageNumbers = [];\r\n  const [message, setmessage] = useState(\"\");\r\n  const [loader, setLoader] = useState(0);\r\n\r\n\r\n  for (let i = 0; i<Math.ceil(users.length)/perPage; i++){\r\n    pageNumbers.push(i)\r\n}\r\n\r\nconst handleChange = (e, pageno) => {\r\n    //console.log(\"test\")\r\n    //console.log(\"pageno\"+pageno)\r\n    setCurrentPage(Math.ceil(users.length/perPage));\r\n    const selectedPage = pageno;\r\n    setActivetPage(pageno);\r\n    setOffset(selectedPage*perPage);\r\n\r\n\r\n}\r\n\r\nconst slice = users.slice(offset, offset + perPage)\r\n\r\n  const handleQueryInput = (e) => {\r\n    setmessage(\"\");\r\n    const value = e.target.value;\r\n    setQuery(value);\r\n  };\r\n  const handlePrevPage = () => {\r\n    setPage((page) => {\r\n      if (page === 1) return page;\r\n      else return page - 1;\r\n    });\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    setPage((page) => page + 1);\r\n  };\r\n\r\n  const handlePageLimit = (e) => {\r\n    const value = e.target.value;\r\n    setLimit(parseInt(value));\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const { data } = await axios.get(\"/search/users?q=\" + query, {\r\n        params: {\r\n          page,\r\n          per_page: limit,\r\n        },\r\n      });\r\n      return data?.items;\r\n    } catch (error) {\r\n      console.error(error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleSearchUsers = async (e) => {\r\n    setLoader(1)\r\n    e.preventDefault();\r\n    //console.log(\"ssss\")\r\n    if (query) {\r\n      \r\n      const items = await fetchUsers();\r\n      if(items)\r\n      {\r\n        setLoader(0)\r\n      }\r\n      setUsers(items);\r\n    } else {\r\n      //console.log(\"Your query is empty...\");\r\n      setmessage(\"Please enter name...\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const displayUsersOnChange = async () => {\r\n      if (query) {\r\n        const items = await fetchUsers();\r\n        setUsers(items);\r\n      }\r\n    };\r\n    displayUsersOnChange();\r\n  }, [page, limit]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"search-form\">\r\n        <h2>GitHub Search</h2>\r\n        <form>\r\n          <input value={query} onChange={handleQueryInput} type=\"text\" />\r\n          <button onClick={handleSearchUsers}>Search</button>\r\n          \r\n        </form>\r\n        <span>{message}</span>\r\n      </div>\r\n      {loader==1 ? <div className=\"lds-spinner\">Loading...<div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div> : '' }\r\n      <div className=\"search-results\">\r\n        <div className=\"more-options\">\r\n         \r\n          <div className=\"pagination\">\r\n         \r\n            {pageNumbers.map(page => (  \r\n                    <button onClick={(event) => handleChange(event,page)}><span key={page} className={(page)==(activepage) ? 'page-link active' : 'page-link' }>  \r\n                      {page+1}</span>\r\n                      </button>\r\n              ))} \r\n          </div>\r\n          \r\n        </div>\r\n        {slice ? (\r\n          slice.map((user) => {\r\n            return <User user={user} key={user.id} />;\r\n          })\r\n        ) : (\r\n          <h4>\r\n            No data\r\n          </h4>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Sai Nikhil\\Desktop\\github searching task\\src\\components\\pages\\User\\User.js",["48","49","50","51"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"./User.css\";\r\nimport site from \"../../../assets/site.png\";\r\nimport github from \"../../../assets/github.png\";\r\nimport location from \"../../../assets/location.png\";\r\nimport user from \"../../../assets/user.png\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport axios from \"../../../axios\";\r\nimport Repo from \"../../ui/Repo\";\r\nconst User = () => {\r\n  const { login } = useParams();\r\n\r\n  //UserInformation\r\n  const [userInfo, setUserInfo] = useState({});\r\n  //User repos\r\n  const [repos, setRepos] = useState([]);\r\n\r\n\r\n  const [currentpage, setCurrentPage] = useState(0)\r\n  const [activepage, setActivetPage] = useState(0)\r\n  const [perPage] = useState(10);\r\n  const [offset, setOffset] = useState(0);\r\n  const pageNumbers = [];\r\n\r\n\r\n  for (let i = 0; i<Math.ceil(repos.length)/perPage; i++){\r\n    pageNumbers.push(i)\r\n}\r\n\r\nconst handleChange = (e, pageno) => {\r\n    //console.log(\"test\")\r\n    //console.log(\"pageno\"+pageno)\r\n    setCurrentPage(Math.ceil(repos.length/perPage));\r\n    const selectedPage = pageno;\r\n    setActivetPage(pageno);\r\n    setOffset(selectedPage*perPage);\r\n\r\n\r\n}\r\n\r\nconst slice = repos.slice(offset, offset + perPage)\r\n\r\n  useEffect(() => {\r\n    const fetchUserInformation = async () => {\r\n      try {\r\n        const response = await Promise.all([\r\n          axios.get(`/users/${login}`),\r\n          axios.get(`/users/${login}/repos`),\r\n        ]);\r\n        setUserInfo(response[0].data);\r\n        setRepos(response[1].data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchUserInformation();\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <Link to=\"/\" className=\"back\">\r\n        Back\r\n      </Link>\r\n      <div className=\"user-information\">\r\n        <div className=\"image\">\r\n          <img src={userInfo?.avatar_url} />\r\n        </div>\r\n        <div className=\"user-content\">\r\n          <h3>{userInfo?.name}</h3>\r\n          <p>{userInfo?.bio}</p>\r\n          <div className=\"more-data\">\r\n            <p>\r\n              <img src={user} alt=\"\" />\r\n              {userInfo?.followers} Followers. Following {userInfo?.following}\r\n            </p>\r\n            {userInfo?.location && (\r\n              <p>\r\n                <img src={location} alt=\"\" />\r\n                {userInfo?.location}\r\n              </p>\r\n            )}\r\n            {userInfo?.blog && (\r\n              <p>\r\n                <img src={site} alt=\"\" />\r\n                {userInfo?.blog}\r\n              </p>\r\n            )}\r\n            <p>\r\n              <img src={github} alt=\"\" />\r\n              <a href={userInfo?.html_url}>View GitHub Profile</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"user-repos\">\r\n        <div className=\"pagination\">\r\n         \r\n            {/* <button onClick={handlePrevPage}>{page}</button>\r\n            <button onClick={handleNextPage}>{page + 1}</button> */}\r\n            {pageNumbers.map(page => (  \r\n                    <button onClick={(event) => handleChange(event,page)}><span key={page} className={(page)==(activepage) ? 'page-link active' : 'page-link' }>  \r\n                      {page+1}</span>\r\n                      </button>\r\n              ))} \r\n          </div>\r\n        {repos ? (\r\n          slice.map((repo) => {\r\n            return <Repo repo={repo} key={repo.id} />;\r\n          })\r\n        ) : (\r\n          <h3>repos not found...</h3>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","C:\\Users\\Sai Nikhil\\Desktop\\github searching task\\src\\axios.js",["52"],[],"import axios from \"axios\";\r\n\r\nexport default URL = axios.create({\r\n  baseURL: \"https://api.github.com\",\r\n});\r\n","C:\\Users\\Sai Nikhil\\Desktop\\github searching task\\src\\components\\ui\\User.js",[],[],"C:\\Users\\Sai Nikhil\\Desktop\\github searching task\\src\\components\\ui\\Repo.js",[],[],{"ruleId":"53","severity":1,"message":"54","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":12},{"ruleId":"53","severity":1,"message":"57","line":15,"column":10,"nodeType":"55","messageId":"56","endLine":15,"endColumn":21},{"ruleId":"53","severity":1,"message":"58","line":46,"column":9,"nodeType":"55","messageId":"56","endLine":46,"endColumn":23},{"ruleId":"53","severity":1,"message":"59","line":53,"column":9,"nodeType":"55","messageId":"56","endLine":53,"endColumn":23},{"ruleId":"53","severity":1,"message":"60","line":57,"column":9,"nodeType":"55","messageId":"56","endLine":57,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":103,"column":6,"nodeType":"63","endLine":103,"endColumn":19,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":116,"column":14,"nodeType":"67","messageId":"68","endLine":116,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":123,"column":109,"nodeType":"67","messageId":"68","endLine":123,"endColumn":111},{"ruleId":"53","severity":1,"message":"57","line":19,"column":10,"nodeType":"55","messageId":"56","endLine":19,"endColumn":21},{"ruleId":"61","severity":1,"message":"69","line":57,"column":6,"nodeType":"63","endLine":57,"endColumn":8,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":65,"column":11,"nodeType":"73","endLine":65,"endColumn":45},{"ruleId":"65","severity":1,"message":"66","line":101,"column":109,"nodeType":"67","messageId":"68","endLine":101,"endColumn":111},{"ruleId":"74","severity":1,"message":"75","line":3,"column":16,"nodeType":"55","messageId":"76","endLine":3,"endColumn":19},"no-unused-vars","'Repo' is defined but never used.","Identifier","unusedVar","'currentpage' is assigned a value but never used.","'handlePrevPage' is assigned a value but never used.","'handleNextPage' is assigned a value but never used.","'handlePageLimit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchUsers' and 'query'. Either include them or remove the dependency array.","ArrayExpression",["77"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'login'. Either include it or remove the dependency array.",["78"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign","Read-only global 'URL' should not be modified.","nativeReassign",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [page, limit, query, fetchUsers]",{"range":"83","text":"84"},"Update the dependencies array to be: [login]",{"range":"85","text":"86"},[2506,2519],"[page, limit, query, fetchUsers]",[1626,1628],"[login]"]